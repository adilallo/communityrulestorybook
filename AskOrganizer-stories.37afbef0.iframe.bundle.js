"use strict";(self.webpackChunkcommunity_rule=self.webpackChunkcommunity_rule||[]).push([[7833],{"./stories/AskOrganizer.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Compact:()=>Compact,Default:()=>Default,Inverse:()=>Inverse,LeftAligned:()=>LeftAligned,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AskOrganizer_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),ContentLockup=__webpack_require__("./app/components/ContentLockup.js"),Button=__webpack_require__("./app/components/Button.js");const AskOrganizer=(0,react.memo)(({title,subtitle,description,buttonText="Ask an organizer",buttonHref="#",className="",variant="centered",onContactClick})=>{const variantStyles={centered:{container:"text-center",buttonContainer:"flex justify-center"},"left-aligned":{container:"text-left",buttonContainer:"flex justify-start"},compact:{container:"text-center",buttonContainer:"flex justify-center"},inverse:{container:"text-center",buttonContainer:"flex justify-center"}},styles=variantStyles[variant]||variantStyles.centered,sectionPadding="compact"===variant?"py-[var(--spacing-scale-016)] px-[var(--spacing-scale-016)] md:py-[var(--spacing-scale-032)] md:px-[var(--spacing-scale-032)]":"py-[var(--spacing-scale-032)] px-[var(--spacing-scale-032)] md:py-[var(--spacing-scale-096)] md:px-[var(--spacing-scale-064)]",contentGap="compact"===variant?"gap-[var(--spacing-scale-020)]":"gap-[var(--spacing-scale-040)]";return(0,jsx_runtime.jsx)("section",{className:`${sectionPadding} ${className}`,"aria-labelledby":"ask-organizer-headline",role:"region",tabIndex:-1,children:(0,jsx_runtime.jsxs)("div",{className:`flex flex-col ${contentGap} ${styles.container}`,children:[(0,jsx_runtime.jsx)(ContentLockup.A,{title,subtitle,description,variant:"inverse"===variant?"ask-inverse":"ask",alignment:"left-aligned"===variant?"left":"center"}),(0,jsx_runtime.jsx)("div",{className:styles.buttonContainer,children:(0,jsx_runtime.jsx)(Button.A,{href:buttonHref,size:"large",variant:"inverse"===variant?"primary":"default",className:"xl:!px-[var(--spacing-scale-020)] xl:!py-[var(--spacing-scale-012)] xl:!text-[24px] xl:!leading-[28px]",onClick:event=>{onContactClick&&onContactClick({event:"contact_button_click",component:"AskOrganizer",variant,buttonText,buttonHref,timestamp:(new Date).toISOString()}),window.gtag&&window.gtag("event","contact_button_click",{event_category:"engagement",event_label:"ask_organizer",value:1})},"aria-label":`${buttonText} - Contact an organizer for help`,children:buttonText})})]})})});AskOrganizer.displayName="AskOrganizer";const components_AskOrganizer=AskOrganizer;AskOrganizer.__docgenInfo={description:"",methods:[],displayName:"AskOrganizer",props:{buttonText:{defaultValue:{value:'"Ask an organizer"',computed:!1},required:!1},buttonHref:{defaultValue:{value:'"#"',computed:!1},required:!1},className:{defaultValue:{value:'""',computed:!1},required:!1},variant:{defaultValue:{value:'"centered"',computed:!1},required:!1}}};var console=__webpack_require__("./node_modules/console-browserify/index.js");const AskOrganizer_stories={title:"Components/AskOrganizer",component:components_AskOrganizer,parameters:{docs:{description:{component:"The AskOrganizer component provides clear pathways for user inquiries. This component serves as a conversion point throughout the platform."}}},argTypes:{title:{control:"text",description:"The main title for the ask organizer section"},subtitle:{control:"text",description:"The subtitle text"},description:{control:"text",description:"Additional description text"},buttonText:{control:"text",description:"Text for the call-to-action button"},buttonHref:{control:"text",description:"URL for the button link"},variant:{control:{type:"select"},options:["centered","left-aligned","compact","inverse"],description:"Layout variant for the component"},onContactClick:{action:"contact clicked",description:"Analytics callback for contact button clicks"}}},Default={args:{title:"Still have questions?",subtitle:"Get answers from an experienced organizer",buttonText:"Ask an organizer",buttonHref:"#contact",variant:"centered",onContactClick:data=>console.log("Contact clicked:",data)}},LeftAligned={args:{title:"Still have questions?",subtitle:"Get answers from an experienced organizer",buttonText:"Ask an organizer",buttonHref:"#contact",variant:"left-aligned",onContactClick:data=>console.log("Contact clicked:",data)}},Compact={args:{title:"Still have questions?",subtitle:"Get answers from an experienced organizer",buttonText:"Ask an organizer",buttonHref:"#contact",variant:"compact",onContactClick:data=>console.log("Contact clicked:",data)}},Inverse={args:{title:"Still have questions?",subtitle:"Get answers from an experienced organizer",buttonText:"Ask an organizer",buttonHref:"#contact",variant:"inverse",onContactClick:data=>console.log("Contact clicked:",data)}},__namedExportsOrder=["Default","LeftAligned","Compact","Inverse"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "Still have questions?",\n    subtitle: "Get answers from an experienced organizer",\n    buttonText: "Ask an organizer",\n    buttonHref: "#contact",\n    variant: "centered",\n    onContactClick: data => console.log("Contact clicked:", data)\n  }\n}',...Default.parameters?.docs?.source}}},LeftAligned.parameters={...LeftAligned.parameters,docs:{...LeftAligned.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "Still have questions?",\n    subtitle: "Get answers from an experienced organizer",\n    buttonText: "Ask an organizer",\n    buttonHref: "#contact",\n    variant: "left-aligned",\n    onContactClick: data => console.log("Contact clicked:", data)\n  }\n}',...LeftAligned.parameters?.docs?.source}}},Compact.parameters={...Compact.parameters,docs:{...Compact.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "Still have questions?",\n    subtitle: "Get answers from an experienced organizer",\n    buttonText: "Ask an organizer",\n    buttonHref: "#contact",\n    variant: "compact",\n    onContactClick: data => console.log("Contact clicked:", data)\n  }\n}',...Compact.parameters?.docs?.source}}},Inverse.parameters={...Inverse.parameters,docs:{...Inverse.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "Still have questions?",\n    subtitle: "Get answers from an experienced organizer",\n    buttonText: "Ask an organizer",\n    buttonHref: "#contact",\n    variant: "inverse",\n    onContactClick: data => console.log("Contact clicked:", data)\n  }\n}',...Inverse.parameters?.docs?.source}}}}}]);