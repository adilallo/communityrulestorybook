"use strict";(self.webpackChunkcommunity_rule=self.webpackChunkcommunity_rule||[]).push([[392],{"./stories/Checkbox.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checked:()=>Checked,Default:()=>Default,Inverse:()=>Inverse,Standard:()=>Standard,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Checkbox_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const Checkbox=(0,react.memo)(({checked=!1,mode="standard",state="default",disabled=!1,label,className="",onChange,id,name,value,ariaLabel,...props})=>{const isInverse="inverse"===mode,backgroundWhenChecked=isInverse?"var(--color-surface-default-transparent)":"var(--color-surface-default-primary)",checkGlyphColor=checked?isInverse?"var(--color-content-inverse-primary)":"var(--color-border-default-brand-primary)":"transparent",labelColor=isInverse?"var(--color-content-inverse-primary)":"var(--color-content-default-primary)",combinedBoxStyles=`flex items-center justify-center shrink-0 w-[var(--measures-sizing-024)] h-[var(--measures-sizing-024)] rounded-[var(--measures-radius-medium)] transition-all duration-200 ease-in-out ${{default:"",hover:"",focus:""}[state]}`,defaultOutlineClass=isInverse?"outline outline-1 outline-[var(--color-border-inverse-primary)]":"outline outline-1 outline-[var(--color-border-default-tertiary)]",handleToggle=e=>{disabled||null==onChange||onChange({checked:!checked,value,event:e})},generatedId=(0,react.useId)(),checkboxId=id||`checkbox-${generatedId}`,accessibilityProps={role:"checkbox","aria-checked":checked?"true":"false",...disabled&&{"aria-disabled":"true",tabIndex:-1},...!disabled&&{tabIndex:0},...ariaLabel&&{"aria-label":ariaLabel},...label&&!ariaLabel&&{"aria-labelledby":`${checkboxId}-label`},id:checkboxId,...props};return(0,jsx_runtime.jsxs)("label",{className:`inline-flex items-center gap-[8px] cursor-pointer select-none ${disabled?"opacity-60 cursor-not-allowed":""} ${className}`,onMouseDown:e=>e.preventDefault(),children:[(0,jsx_runtime.jsx)("span",{...accessibilityProps,onClick:handleToggle,onKeyDown:e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),handleToggle(e))},className:`${combinedBoxStyles} ${defaultOutlineClass} hover:outline hover:outline-1 hover:outline-[var(--color-border-default-brand-primary)] focus:outline focus:outline-1 focus:outline-[var(--color-border-default-utility-info)] focus:shadow-[0_0_10px_1px_var(--color-surface-inverse-brand-primary)] p-[var(--measures-spacing-004)]`,style:{backgroundColor:backgroundWhenChecked},children:(0,jsx_runtime.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 12 12","aria-hidden":"true",focusable:"false",children:(0,jsx_runtime.jsx)("polyline",{points:"2.5 6 5 8.5 10 3.5",stroke:checkGlyphColor,strokeWidth:"1.25",fill:"none",strokeLinecap:"square",strokeLinejoin:"miter",vectorEffect:"non-scaling-stroke"})})}),label&&(0,jsx_runtime.jsx)("span",{id:`${checkboxId}-label`,className:"font-inter text-[14px] leading-[18px]",style:{color:labelColor},children:label}),(0,jsx_runtime.jsx)("input",{type:"checkbox",name,value,checked,onChange:()=>{},tabIndex:-1,"aria-hidden":"true",className:"sr-only",readOnly:!0})]})});Checkbox.displayName="Checkbox";const components_Checkbox=Checkbox;Checkbox.__docgenInfo={description:"Checkbox\nA basic controlled checkbox with visual modes and interaction states.\nThis is a minimal first pass; visuals will be refined collaboratively.",methods:[],displayName:"Checkbox",props:{checked:{defaultValue:{value:"false",computed:!1},required:!1},mode:{defaultValue:{value:'"standard"',computed:!1},required:!1},state:{defaultValue:{value:'"default"',computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},className:{defaultValue:{value:'""',computed:!1},required:!1}}};var dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");const Checkbox_stories={title:"Forms/Checkbox",component:components_Checkbox,parameters:{layout:"centered",backgrounds:{default:"dark",values:[{name:"light",value:"#ffffff"},{name:"dark",value:"#000000"}]}},argTypes:{checked:{control:"boolean",description:"Whether the checkbox is checked"},mode:{control:"select",options:["standard","inverse"],description:"Visual mode of the checkbox"},state:{control:"select",options:["default","hover","focus"],description:"Interaction state for static display"},disabled:{control:"boolean",description:"Whether the checkbox is disabled"},label:{control:"text",description:"Label text for the checkbox"}}},Default={args:{checked:!1,mode:"standard",state:"default",disabled:!1,label:"Default checkbox"},play:{play:async({canvasElement})=>{const checkbox=(0,dist.ux)(canvasElement).getByRole("checkbox");(0,dist.E3)(checkbox).toHaveAttribute("aria-checked","false"),await dist.Q4.click(checkbox),(0,dist.E3)(checkbox).toHaveAttribute("aria-checked","true"),await dist.Q4.click(checkbox),(0,dist.E3)(checkbox).toHaveAttribute("aria-checked","false")}}.play,render:args=>{const[checked,setChecked]=react.useState(args.checked);return(0,jsx_runtime.jsx)(components_Checkbox,{...args,checked,onChange:({checked:newChecked})=>setChecked(newChecked)})}},Checked={args:{checked:!0,mode:"standard",state:"default",disabled:!1,label:"Checked checkbox"},play:{play:async({canvasElement})=>{const checkbox=(0,dist.ux)(canvasElement).getByRole("checkbox");(0,dist.E3)(checkbox).toHaveAttribute("aria-checked","true"),await dist.Q4.click(checkbox),(0,dist.E3)(checkbox).toHaveAttribute("aria-checked","false")}}.play,render:args=>{const[checked,setChecked]=react.useState(args.checked);return(0,jsx_runtime.jsx)(components_Checkbox,{...args,checked,onChange:({checked:newChecked})=>setChecked(newChecked)})}},Standard={render:()=>{const[unchecked,setUnchecked]=react.useState(!1),[checked,setChecked]=react.useState(!0);return(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-white font-medium",children:"Standard Mode"}),(0,jsx_runtime.jsxs)("div",{className:"flex flex-col gap-2",children:[(0,jsx_runtime.jsx)(components_Checkbox,{label:"Unchecked",checked:unchecked,mode:"standard",onChange:({checked:newChecked})=>setUnchecked(newChecked)}),(0,jsx_runtime.jsx)(components_Checkbox,{label:"Checked",checked,mode:"standard",onChange:({checked:newChecked})=>setChecked(newChecked)})]})]})})},play:{play:async({canvasElement})=>{const checkboxes=(0,dist.ux)(canvasElement).getAllByRole("checkbox");(0,dist.E3)(checkboxes).toHaveLength(2),(0,dist.E3)(checkboxes[0]).toHaveAttribute("aria-checked","false"),await dist.Q4.click(checkboxes[0]),(0,dist.E3)(checkboxes[0]).toHaveAttribute("aria-checked","true"),(0,dist.E3)(checkboxes[1]).toHaveAttribute("aria-checked","true"),await dist.Q4.click(checkboxes[1]),(0,dist.E3)(checkboxes[1]).toHaveAttribute("aria-checked","false")}}.play},Inverse={render:()=>{const[unchecked,setUnchecked]=react.useState(!1),[checked,setChecked]=react.useState(!0);return(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-white font-medium",children:"Inverse Mode"}),(0,jsx_runtime.jsxs)("div",{className:"flex flex-col gap-2",children:[(0,jsx_runtime.jsx)(components_Checkbox,{label:"Unchecked",checked:unchecked,mode:"inverse",onChange:({checked:newChecked})=>setUnchecked(newChecked)}),(0,jsx_runtime.jsx)(components_Checkbox,{label:"Checked",checked,mode:"inverse",onChange:({checked:newChecked})=>setChecked(newChecked)})]})]})})},play:{play:async({canvasElement})=>{const checkboxes=(0,dist.ux)(canvasElement).getAllByRole("checkbox");(0,dist.E3)(checkboxes).toHaveLength(2),(0,dist.E3)(checkboxes[0]).toHaveAttribute("aria-checked","false"),await dist.Q4.click(checkboxes[0]),(0,dist.E3)(checkboxes[0]).toHaveAttribute("aria-checked","true"),(0,dist.E3)(checkboxes[1]).toHaveAttribute("aria-checked","true"),await dist.Q4.click(checkboxes[1]),(0,dist.E3)(checkboxes[1]).toHaveAttribute("aria-checked","false")}}.play},__namedExportsOrder=["Default","Checked","Standard","Inverse"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    checked: false,\n    mode: "standard",\n    state: "default",\n    disabled: false,\n    label: "Default checkbox"\n  },\n  play: DefaultInteraction.play,\n  render: args => {\n    const [checked, setChecked] = React.useState(args.checked);\n    return <Checkbox {...args} checked={checked} onChange={({\n      checked: newChecked\n    }) => setChecked(newChecked)} />;\n  }\n}',...Default.parameters?.docs?.source}}},Checked.parameters={...Checked.parameters,docs:{...Checked.parameters?.docs,source:{originalSource:'{\n  args: {\n    checked: true,\n    mode: "standard",\n    state: "default",\n    disabled: false,\n    label: "Checked checkbox"\n  },\n  play: CheckedInteraction.play,\n  render: args => {\n    const [checked, setChecked] = React.useState(args.checked);\n    return <Checkbox {...args} checked={checked} onChange={({\n      checked: newChecked\n    }) => setChecked(newChecked)} />;\n  }\n}',...Checked.parameters?.docs?.source}}},Standard.parameters={...Standard.parameters,docs:{...Standard.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [unchecked, setUnchecked] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n    return <div className="space-y-4">\n        <div className="space-y-2">\n          <h3 className="text-white font-medium">Standard Mode</h3>\n          <div className="flex flex-col gap-2">\n            <Checkbox label="Unchecked" checked={unchecked} mode="standard" onChange={({\n            checked: newChecked\n          }) => setUnchecked(newChecked)} />\n            <Checkbox label="Checked" checked={checked} mode="standard" onChange={({\n            checked: newChecked\n          }) => setChecked(newChecked)} />\n          </div>\n        </div>\n      </div>;\n  },\n  play: StandardInteraction.play\n}',...Standard.parameters?.docs?.source}}},Inverse.parameters={...Inverse.parameters,docs:{...Inverse.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [unchecked, setUnchecked] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n    return <div className="space-y-4">\n        <div className="space-y-2">\n          <h3 className="text-white font-medium">Inverse Mode</h3>\n          <div className="flex flex-col gap-2">\n            <Checkbox label="Unchecked" checked={unchecked} mode="inverse" onChange={({\n            checked: newChecked\n          }) => setUnchecked(newChecked)} />\n            <Checkbox label="Checked" checked={checked} mode="inverse" onChange={({\n            checked: newChecked\n          }) => setChecked(newChecked)} />\n          </div>\n        </div>\n      </div>;\n  },\n  play: InverseInteraction.play\n}',...Inverse.parameters?.docs?.source}}}}}]);