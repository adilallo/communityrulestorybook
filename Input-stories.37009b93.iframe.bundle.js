"use strict";(self.webpackChunkcommunity_rule=self.webpackChunkcommunity_rule||[]).push([[7661],{"./stories/Input.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Active:()=>Active,AllSizes:()=>AllSizes,AllStates:()=>AllStates,Default:()=>Default,DefaultLabel:()=>DefaultLabel,Disabled:()=>Disabled,Error:()=>Error,Focus:()=>Focus,HorizontalLabel:()=>HorizontalLabel,Hover:()=>Hover,Interactive:()=>Interactive,Large:()=>Large,Medium:()=>Medium,Small:()=>Small,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Input_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const Input=(0,react.forwardRef)(({size="medium",labelVariant="default",state="default",disabled=!1,error=!1,label,placeholder,value,onChange,onFocus,onBlur,id,name,type="text",className="",...props},ref)=>{const generatedId=(0,react.useId)(),inputId=id||`input-${generatedId}`,sizeStyles={small:{input:"horizontal"===labelVariant?"h-[30px] px-[12px] py-[8px] text-[10px]":"h-[32px] px-[12px] py-[8px] text-[10px]",label:"text-[12px] leading-[14px] font-medium",container:"gap-[4px]",radius:"var(--measures-radius-small)"},medium:{input:"h-[36px] px-[12px] py-[8px] text-[14px] leading-[20px]",label:"text-[14px] leading-[16px] font-medium",container:"gap-[8px]",radius:"var(--measures-radius-medium)"},large:{input:"h-[40px] px-[12px] py-[8px] text-[16px] leading-[24px]",label:"text-[16px] leading-[20px] font-medium",container:"gap-[12px]",radius:"var(--measures-radius-large)"}},stateStyles=(()=>{if(disabled)return{input:"bg-[var(--color-content-default-secondary)] text-[var(--color-content-default-primary)] border border-[var(--color-border-default-tertiary)] cursor-not-allowed",label:"text-[var(--color-content-default-secondary)]"};if(error)return{input:"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)] border border-[var(--color-border-default-utility-negative)]",label:"text-[var(--color-content-default-secondary)]"};switch(state){case"active":return{input:"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)] border border-[var(--color-border-default-tertiary)]",label:"text-[var(--color-content-default-secondary)]"};case"hover":return{input:"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)] border border-[var(--color-border-default-tertiary)] shadow-[0_0_0_2px_var(--color-border-default-tertiary)]",label:"text-[var(--color-content-default-secondary)]"};case"focus":return{input:"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)] border border-[var(--color-border-default-utility-info)] shadow-[0_0_5px_3px_#3281F8]",label:"text-[var(--color-content-default-secondary)]"};default:return{input:"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)] border border-[var(--color-border-default-tertiary)] hover:shadow-[0_0_0_2px_var(--color-border-default-tertiary)]",label:"text-[var(--color-content-default-secondary)]"}}})(),currentSize=sizeStyles[size],containerClasses="horizontal"===labelVariant?"flex items-center gap-[12px]":`flex flex-col ${currentSize.container}`,labelClasses="horizontal"===labelVariant?`${currentSize.label} font-inter min-w-fit`:`${currentSize.label} font-inter`,inputClasses=`\n       w-full border transition-all duration-200 ease-in-out\n       focus:outline-none focus:ring-0\n       ${currentSize.input}\n       ${stateStyles.input}\n       ${className}\n     `.trim(),handleChange=(0,react.useCallback)(e=>{!disabled&&onChange&&onChange(e)},[disabled,onChange]),handleFocus=(0,react.useCallback)(e=>{!disabled&&onFocus&&onFocus(e)},[disabled,onFocus]),handleBlur=(0,react.useCallback)(e=>{!disabled&&onBlur&&onBlur(e)},[disabled,onBlur]);return(0,jsx_runtime.jsxs)("div",{className:containerClasses,children:[label&&(0,jsx_runtime.jsx)("label",{htmlFor:inputId,className:`${labelClasses} font-inter font-medium text-[var(--color-content-default-secondary)]`,children:label}),(0,jsx_runtime.jsx)("div",{className:disabled?"opacity-40":"",children:(0,jsx_runtime.jsx)("input",{ref,id:inputId,name,type,value,placeholder,onChange:handleChange,onFocus:handleFocus,onBlur:handleBlur,disabled,className:inputClasses,style:{borderRadius:currentSize.radius},...props})})]})});Input.displayName="Input";const components_Input=(0,react.memo)(Input);Input.__docgenInfo={description:"",methods:[],displayName:"Input",props:{size:{defaultValue:{value:'"medium"',computed:!1},required:!1},labelVariant:{defaultValue:{value:'"default"',computed:!1},required:!1},state:{defaultValue:{value:'"default"',computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},error:{defaultValue:{value:"false",computed:!1},required:!1},type:{defaultValue:{value:'"text"',computed:!1},required:!1},className:{defaultValue:{value:'""',computed:!1},required:!1}}};const Input_stories={title:"Forms/Input",component:components_Input,parameters:{layout:"centered"},argTypes:{size:{control:{type:"select"},options:["small","medium","large"]},labelVariant:{control:{type:"select"},options:["default","horizontal"]},state:{control:{type:"select"},options:["default","active","hover","focus","error","disabled"]},disabled:{control:{type:"boolean"}},error:{control:{type:"boolean"}},label:{control:{type:"text"}},placeholder:{control:{type:"text"}},value:{control:{type:"text"}}}},Template=args=>(0,jsx_runtime.jsx)(components_Input,{...args}),Default=Template.bind({});Default.args={label:"Default Input",placeholder:"Enter text...",size:"medium",labelVariant:"default",state:"default"};const Small=Template.bind({});Small.args={label:"Small Input",placeholder:"Small size",size:"small",labelVariant:"default",state:"default"};const Medium=Template.bind({});Medium.args={label:"Medium Input",placeholder:"Medium size",size:"medium",labelVariant:"default",state:"default"};const Large=Template.bind({});Large.args={label:"Large Input",placeholder:"Large size",size:"large",labelVariant:"default",state:"default"};const DefaultLabel=Template.bind({});DefaultLabel.args={label:"Default Label (Top)",placeholder:"Top label",size:"medium",labelVariant:"default",state:"default"};const HorizontalLabel=Template.bind({});HorizontalLabel.args={label:"Horizontal Label",placeholder:"Left label",size:"medium",labelVariant:"horizontal",state:"default"};const Active=Template.bind({});Active.args={label:"Active State",placeholder:"Active input",size:"medium",labelVariant:"default",state:"active"};const Hover=Template.bind({});Hover.args={label:"Hover State",placeholder:"Hover input",size:"medium",labelVariant:"default",state:"hover"};const Focus=Template.bind({});Focus.args={label:"Focus State",placeholder:"Focused input",size:"medium",labelVariant:"default",state:"focus"};const Error=Template.bind({});Error.args={label:"Error State",placeholder:"Error input",size:"medium",labelVariant:"default",state:"default",error:!0};const Disabled=Template.bind({});Disabled.args={label:"Disabled State",placeholder:"Disabled input",size:"medium",labelVariant:"default",state:"default",disabled:!0};const Interactive=args=>{const[value,setValue]=react.useState("");return(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(components_Input,{...args,value,onChange:e=>setValue(e.target.value)}),(0,jsx_runtime.jsxs)("p",{className:"text-sm text-gray-600",children:['Current value: "',value,'"']})]})};Interactive.args={label:"Interactive Input",placeholder:"Type something...",size:"medium",labelVariant:"default",state:"default"};const AllSizes=()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-6",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold mb-4",children:"Small Size"}),(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsx)(components_Input,{label:"Small Default",placeholder:"Small with top label",size:"small",labelVariant:"default"})})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold mb-4",children:"Medium Size"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(components_Input,{label:"Medium Default",placeholder:"Medium with top label",size:"medium",labelVariant:"default"}),(0,jsx_runtime.jsx)(components_Input,{label:"Medium Horizontal",placeholder:"Medium with left label",size:"medium",labelVariant:"horizontal"})]})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold mb-4",children:"Large Size"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(components_Input,{label:"Large Default",placeholder:"Large with top label",size:"large",labelVariant:"default"}),(0,jsx_runtime.jsx)(components_Input,{label:"Large Horizontal",placeholder:"Large with left label",size:"large",labelVariant:"horizontal"})]})]})]}),AllStates=()=>(0,jsx_runtime.jsx)("div",{className:"space-y-6",children:(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold mb-4",children:"Input States"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(components_Input,{label:"Default State",placeholder:"Default input",size:"medium",state:"default"}),(0,jsx_runtime.jsx)(components_Input,{label:"Active State",placeholder:"Active input",size:"medium",state:"active"}),(0,jsx_runtime.jsx)(components_Input,{label:"Hover State",placeholder:"Hover input",size:"medium",state:"hover"}),(0,jsx_runtime.jsx)(components_Input,{label:"Focus State",placeholder:"Focused input",size:"medium",state:"focus"}),(0,jsx_runtime.jsx)(components_Input,{label:"Error State",placeholder:"Error input",size:"medium",error:!0}),(0,jsx_runtime.jsx)(components_Input,{label:"Disabled State",placeholder:"Disabled input",size:"medium",disabled:!0})]})]})}),__namedExportsOrder=["Default","Small","Medium","Large","DefaultLabel","HorizontalLabel","Active","Hover","Focus","Error","Disabled","Interactive","AllSizes","AllStates"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Default.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Small.parameters?.docs?.source}}},Medium.parameters={...Medium.parameters,docs:{...Medium.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Medium.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Large.parameters?.docs?.source}}},DefaultLabel.parameters={...DefaultLabel.parameters,docs:{...DefaultLabel.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...DefaultLabel.parameters?.docs?.source}}},HorizontalLabel.parameters={...HorizontalLabel.parameters,docs:{...HorizontalLabel.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...HorizontalLabel.parameters?.docs?.source}}},Active.parameters={...Active.parameters,docs:{...Active.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Active.parameters?.docs?.source}}},Hover.parameters={...Hover.parameters,docs:{...Hover.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Hover.parameters?.docs?.source}}},Focus.parameters={...Focus.parameters,docs:{...Focus.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Focus.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Error.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => <Input {...args} />",...Disabled.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = React.useState("");\n  return <div className="space-y-4">\n      <Input {...args} value={value} onChange={e => setValue(e.target.value)} />\n      <p className="text-sm text-gray-600">Current value: "{value}"</p>\n    </div>;\n}',...Interactive.parameters?.docs?.source}}},AllSizes.parameters={...AllSizes.parameters,docs:{...AllSizes.parameters?.docs,source:{originalSource:'() => <div className="space-y-6">\n    <div>\n      <h3 className="text-lg font-semibold mb-4">Small Size</h3>\n      <div className="space-y-4">\n        <Input label="Small Default" placeholder="Small with top label" size="small" labelVariant="default" />\n      </div>\n    </div>\n\n    <div>\n      <h3 className="text-lg font-semibold mb-4">Medium Size</h3>\n      <div className="space-y-4">\n        <Input label="Medium Default" placeholder="Medium with top label" size="medium" labelVariant="default" />\n        <Input label="Medium Horizontal" placeholder="Medium with left label" size="medium" labelVariant="horizontal" />\n      </div>\n    </div>\n\n    <div>\n      <h3 className="text-lg font-semibold mb-4">Large Size</h3>\n      <div className="space-y-4">\n        <Input label="Large Default" placeholder="Large with top label" size="large" labelVariant="default" />\n        <Input label="Large Horizontal" placeholder="Large with left label" size="large" labelVariant="horizontal" />\n      </div>\n    </div>\n  </div>',...AllSizes.parameters?.docs?.source}}},AllStates.parameters={...AllStates.parameters,docs:{...AllStates.parameters?.docs,source:{originalSource:'() => <div className="space-y-6">\n    <div>\n      <h3 className="text-lg font-semibold mb-4">Input States</h3>\n      <div className="space-y-4">\n        <Input label="Default State" placeholder="Default input" size="medium" state="default" />\n        <Input label="Active State" placeholder="Active input" size="medium" state="active" />\n        <Input label="Hover State" placeholder="Hover input" size="medium" state="hover" />\n        <Input label="Focus State" placeholder="Focused input" size="medium" state="focus" />\n        <Input label="Error State" placeholder="Error input" size="medium" error={true} />\n        <Input label="Disabled State" placeholder="Disabled input" size="medium" disabled={true} />\n      </div>\n    </div>\n  </div>',...AllStates.parameters?.docs?.source}}}}}]);