"use strict";(self.webpackChunkcommunity_rule=self.webpackChunkcommunity_rule||[]).push([[177],{"./app/components/RadioButton.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const RadioButton=({checked=!1,mode="standard",state="default",disabled=!1,label,onChange,id,name,value,ariaLabel,className="",...props})=>{const isInverse="inverse"===mode,backgroundWhenChecked=isInverse?"var(--color-surface-default-transparent)":"var(--color-surface-default-primary)",dotColor=checked?isInverse?"var(--color-content-inverse-primary)":"var(--color-border-default-brand-primary)":"transparent",labelColor=isInverse?"var(--color-content-inverse-primary)":"var(--color-content-default-primary)",combinedBoxStyles=`flex items-center justify-center shrink-0 w-[var(--measures-sizing-024)] h-[var(--measures-sizing-024)] rounded-[var(--measures-radius-medium)] transition-all duration-200 ease-in-out ${{default:"",hover:"",focus:""}[state]}`,defaultOutlineClass=isInverse?"outline outline-1 outline-[var(--color-border-inverse-primary)]":"outline outline-1 outline-[var(--color-border-default-tertiary)]",conditionalHoverOutlineClass=isInverse?"hover:outline hover:outline-1 hover:outline-[var(--color-border-inverse-brand-primary)]":"hover:outline hover:outline-1 hover:outline-[var(--color-border-default-brand-primary)]",generatedId=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),radioId=id||`radio-${generatedId}`,handleToggle=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(e=>{disabled||!onChange||checked||onChange({checked:!0,value})},[disabled,onChange,checked,value]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("label",{className:`inline-flex items-center gap-[8px] cursor-pointer select-none ${disabled?"opacity-60 cursor-not-allowed":""} ${className}`,onMouseDown:e=>e.preventDefault(),onClick:handleToggle,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{onKeyDown:e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),handleToggle(e))},className:`${combinedBoxStyles} ${defaultOutlineClass} ${conditionalHoverOutlineClass} focus:outline focus:outline-1 focus:outline-[var(--color-border-default-utility-info)] focus:shadow-[0_0_10px_1px_var(--color-surface-inverse-brand-primary)] p-[var(--measures-spacing-004)]`,style:{backgroundColor:backgroundWhenChecked},tabIndex:0,role:"radio","aria-checked":checked?"true":"false",...disabled&&{"aria-disabled":"true"},...ariaLabel&&{"aria-label":ariaLabel},...label&&!ariaLabel&&{"aria-labelledby":`${radioId}-label`},id:radioId,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"w-[16px] h-[16px] rounded-full transition-all duration-200",style:{backgroundColor:dotColor}})}),label&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{id:`${radioId}-label`,className:"font-inter text-[14px] leading-[18px]",style:{color:labelColor},children:label}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{type:"radio",name,value,checked,onChange:()=>{},disabled,className:"sr-only",tabIndex:-1,"aria-hidden":"true",...props})]})};RadioButton.displayName="RadioButton";const __WEBPACK_DEFAULT_EXPORT__=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(RadioButton);RadioButton.__docgenInfo={description:"",methods:[],displayName:"RadioButton",props:{checked:{defaultValue:{value:"false",computed:!1},required:!1},mode:{defaultValue:{value:'"standard"',computed:!1},required:!1},state:{defaultValue:{value:'"default"',computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},className:{defaultValue:{value:'""',computed:!1},required:!1}}}},"./stories/RadioGroup.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Interactive:()=>Interactive,Inverse:()=>Inverse,Standard:()=>Standard,__namedExportsOrder:()=>__namedExportsOrder,default:()=>RadioGroup_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),RadioButton=__webpack_require__("./app/components/RadioButton.js");const RadioGroup=({name,value,onChange,mode="standard",state="default",disabled=!1,options=[],className="",...props})=>{const generatedId=(0,react.useId)(),groupId=name||`radio-group-${generatedId}`,handleChange=(0,react.useCallback)(optionValue=>{!disabled&&onChange&&onChange({value:optionValue})},[disabled,onChange]);return(0,jsx_runtime.jsx)("div",{className:`space-y-[8px] ${className}`,role:"radiogroup","aria-label":props["aria-label"],...props,children:options.map((option,index)=>{const isSelected=value===option.value;return(0,jsx_runtime.jsx)(RadioButton.A,{checked:isSelected,mode,state,disabled,label:option.label,name:groupId,value:option.value,ariaLabel:option.ariaLabel,onChange:({checked})=>{checked&&handleChange(option.value)}},option.value)})})};RadioGroup.displayName="RadioGroup";const components_RadioGroup=(0,react.memo)(RadioGroup);RadioGroup.__docgenInfo={description:"",methods:[],displayName:"RadioGroup",props:{mode:{defaultValue:{value:'"standard"',computed:!1},required:!1},state:{defaultValue:{value:'"default"',computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},options:{defaultValue:{value:"[]",computed:!1},required:!1},className:{defaultValue:{value:'""',computed:!1},required:!1}}};var dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");const RadioGroup_stories={title:"Forms/RadioGroup",component:components_RadioGroup,parameters:{layout:"centered",backgrounds:{default:"dark",values:[{name:"dark",value:"black"}]}},tags:["autodocs"],argTypes:{mode:{control:{type:"select"},options:["standard","inverse"]},state:{control:{type:"select"},options:["default","hover","focus"]},value:{control:"text"}},args:{mode:"standard",state:"default",value:"option1",options:[{value:"option1",label:"Option 1"},{value:"option2",label:"Option 2"},{value:"option3",label:"Option 3"}]}},Default={args:{mode:"standard",state:"default",value:"option1",options:[{value:"option1",label:"Option 1"},{value:"option2",label:"Option 2"},{value:"option3",label:"Option 3"}]},play:{play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement),radioGroup=canvas.getByRole("radiogroup"),radioButtons=canvas.getAllByRole("radio");await(0,dist.E3)(radioGroup).toBeInTheDocument(),await(0,dist.E3)(radioButtons).toHaveLength(3),await(0,dist.E3)(radioButtons[0]).toHaveAttribute("aria-checked","true"),await(0,dist.E3)(radioButtons[1]).toHaveAttribute("aria-checked","false"),await(0,dist.E3)(radioButtons[2]).toHaveAttribute("aria-checked","false")}}.play,render:args=>{const[value,setValue]=react.useState(args.value);return(0,jsx_runtime.jsx)(components_RadioGroup,{...args,value,onChange:({value:newValue})=>setValue(newValue)})}},Standard={render:()=>{const[value,setValue]=react.useState("option2");return(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-white font-medium",children:"Standard Mode"}),(0,jsx_runtime.jsx)(components_RadioGroup,{name:"standard-example",value,mode:"standard",options:[{value:"option1",label:"Option 1"},{value:"option2",label:"Option 2"},{value:"option3",label:"Option 3"}],onChange:({value:newValue})=>setValue(newValue)})]})})},play:{play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement),radioGroup=canvas.getByRole("radiogroup"),radioButtons=canvas.getAllByRole("radio");await(0,dist.E3)(radioGroup).toBeInTheDocument(),await(0,dist.E3)(radioButtons[0]).toHaveAttribute("aria-checked","false"),await(0,dist.E3)(radioButtons[1]).toHaveAttribute("aria-checked","true"),await(0,dist.E3)(radioButtons[2]).toHaveAttribute("aria-checked","false"),await dist.Q4.click(radioButtons[0]),await(0,dist.E3)(radioButtons[0]).toHaveAttribute("aria-checked","true"),await(0,dist.E3)(radioButtons[1]).toHaveAttribute("aria-checked","false"),await(0,dist.E3)(radioButtons[2]).toHaveAttribute("aria-checked","false")}}.play},Inverse={render:()=>{const[value,setValue]=react.useState("option1");return(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-white font-medium",children:"Inverse Mode"}),(0,jsx_runtime.jsx)(components_RadioGroup,{name:"inverse-example",value,mode:"inverse",options:[{value:"option1",label:"Option 1"},{value:"option2",label:"Option 2"},{value:"option3",label:"Option 3"}],onChange:({value:newValue})=>setValue(newValue)})]})})},play:{play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement),radioGroup=canvas.getByRole("radiogroup"),radioButtons=canvas.getAllByRole("radio");await(0,dist.E3)(radioGroup).toBeInTheDocument(),await(0,dist.E3)(radioButtons[0]).toHaveAttribute("aria-checked","true"),await(0,dist.E3)(radioButtons[1]).toHaveAttribute("aria-checked","false"),await(0,dist.E3)(radioButtons[2]).toHaveAttribute("aria-checked","false"),await dist.Q4.click(radioButtons[1]),await(0,dist.E3)(radioButtons[0]).toHaveAttribute("aria-checked","false"),await(0,dist.E3)(radioButtons[1]).toHaveAttribute("aria-checked","true"),await(0,dist.E3)(radioButtons[2]).toHaveAttribute("aria-checked","false")}}.play},Interactive={render:()=>{const[value,setValue]=react.useState("option1");return(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-white font-medium",children:"Interactive Example"}),(0,jsx_runtime.jsxs)("p",{className:"text-gray-400 text-sm",children:["Selected: ",value]}),(0,jsx_runtime.jsx)(components_RadioGroup,{name:"interactive-example",value,mode:"standard",options:[{value:"option1",label:"Option 1"},{value:"option2",label:"Option 2"},{value:"option3",label:"Option 3"}],onChange:({value})=>setValue(value)})]})})},play:{play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement),radioGroup=canvas.getByRole("radiogroup"),radioButtons=canvas.getAllByRole("radio");await(0,dist.E3)(radioGroup).toBeInTheDocument(),await(0,dist.E3)(canvas.getByText("Selected: option1")).toBeVisible(),await dist.Q4.click(radioButtons[1]),await(0,dist.E3)(canvas.getByText("Selected: option2")).toBeVisible(),await dist.Q4.click(radioButtons[2]),await(0,dist.E3)(canvas.getByText("Selected: option3")).toBeVisible()}}.play},__namedExportsOrder=["Default","Standard","Inverse","Interactive"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    mode: "standard",\n    state: "default",\n    value: "option1",\n    options: [{\n      value: "option1",\n      label: "Option 1"\n    }, {\n      value: "option2",\n      label: "Option 2"\n    }, {\n      value: "option3",\n      label: "Option 3"\n    }]\n  },\n  play: DefaultInteraction.play,\n  render: args => {\n    const [value, setValue] = React.useState(args.value);\n    return <RadioGroup {...args} value={value} onChange={({\n      value: newValue\n    }) => setValue(newValue)} />;\n  }\n}',...Default.parameters?.docs?.source}}},Standard.parameters={...Standard.parameters,docs:{...Standard.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [value, setValue] = React.useState("option2");\n    return <div className="space-y-4">\n        <div className="space-y-2">\n          <h3 className="text-white font-medium">Standard Mode</h3>\n          <RadioGroup name="standard-example" value={value} mode="standard" options={[{\n          value: "option1",\n          label: "Option 1"\n        }, {\n          value: "option2",\n          label: "Option 2"\n        }, {\n          value: "option3",\n          label: "Option 3"\n        }]} onChange={({\n          value: newValue\n        }) => setValue(newValue)} />\n        </div>\n      </div>;\n  },\n  play: StandardInteraction.play\n}',...Standard.parameters?.docs?.source}}},Inverse.parameters={...Inverse.parameters,docs:{...Inverse.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [value, setValue] = React.useState("option1");\n    return <div className="space-y-4">\n        <div className="space-y-2">\n          <h3 className="text-white font-medium">Inverse Mode</h3>\n          <RadioGroup name="inverse-example" value={value} mode="inverse" options={[{\n          value: "option1",\n          label: "Option 1"\n        }, {\n          value: "option2",\n          label: "Option 2"\n        }, {\n          value: "option3",\n          label: "Option 3"\n        }]} onChange={({\n          value: newValue\n        }) => setValue(newValue)} />\n        </div>\n      </div>;\n  },\n  play: InverseInteraction.play\n}',...Inverse.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [value, setValue] = React.useState("option1");\n    return <div className="space-y-4">\n        <div className="space-y-2">\n          <h3 className="text-white font-medium">Interactive Example</h3>\n          <p className="text-gray-400 text-sm">Selected: {value}</p>\n          <RadioGroup name="interactive-example" value={value} mode="standard" options={[{\n          value: "option1",\n          label: "Option 1"\n        }, {\n          value: "option2",\n          label: "Option 2"\n        }, {\n          value: "option3",\n          label: "Option 3"\n        }]} onChange={({\n          value\n        }) => setValue(value)} />\n        </div>\n      </div>;\n  },\n  play: InteractiveInteraction.play\n}',...Interactive.parameters?.docs?.source}}}}}]);