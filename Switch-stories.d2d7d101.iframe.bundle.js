"use strict";(self.webpackChunkcommunity_rule=self.webpackChunkcommunity_rule||[]).push([[3623],{"./stories/Switch.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checked:()=>Checked,Default:()=>Default,Focus:()=>Focus,FocusChecked:()=>FocusChecked,Interactive:()=>Interactive,States:()=>States,WithText:()=>WithText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Switch_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const Switch=(0,react.memo)((0,react.forwardRef)((props,ref)=>{const{checked=!1,onChange,onFocus,onBlur,state="default",label,className="",...rest}=props,switchId=(0,react.useId)(),handleClick=(0,react.useCallback)(e=>{onChange&&onChange(e)},[onChange]),handleKeyDown=(0,react.useCallback)(e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),onChange&&onChange(e))},[onChange]),handleFocus=(0,react.useCallback)(e=>{onFocus&&onFocus(e)},[onFocus]),handleBlur=(0,react.useCallback)(e=>{onBlur&&onBlur(e)},[onBlur]),getTrackStyles=(0,react.useCallback)(()=>checked?"bg-[var(--color-surface-inverse-tertiary)]":"bg-[var(--color-surface-default-tertiary)]",[checked]),getThumbStyles=(0,react.useCallback)(()=>"bg-[var(--color-gray-000)]",[]),getFocusStyles=(0,react.useCallback)(()=>"focus"===state?"shadow-[0_0_5px_3px_#3281F8] rounded-full":"",[state]),trackStyles=getTrackStyles(),thumbStyles=getThumbStyles(),switchClasses=`\n      relative\n      inline-flex\n      items-center\n      cursor-pointer\n      transition-all\n      duration-200\n      focus:outline-none\n      focus-visible:shadow-[0_0_5px_3px_#3281F8]\n      focus-visible:rounded-full\n      ${getFocusStyles()}\n      ${className}\n    `.trim().replace(/\s+/g," "),trackClasses=`\n      ${trackStyles}\n      w-[40px]\n      h-[24px]\n      rounded-full\n      transition-all\n      duration-200\n      flex\n      items-center\n      ${checked?"justify-end":"justify-start"}\n      p-[2px]\n    `.trim().replace(/\s+/g," "),thumbClasses=`\n      ${thumbStyles}\n      w-[var(--measures-sizing-020)]\n      h-[var(--measures-sizing-020)]\n      rounded-[var(--measures-radius-xlarge)]\n      transition-all\n      duration-200\n      shadow-sm\n    `.trim().replace(/\s+/g," "),labelClasses="\n      ml-[var(--measures-spacing-008)]\n      font-inter\n      font-normal\n      text-[14px]\n      leading-[20px]\n      text-[var(--color-content-default-primary)]\n    ".trim().replace(/\s+/g," ");return(0,jsx_runtime.jsxs)("div",{className:"flex items-center",children:[(0,jsx_runtime.jsx)("button",{ref,id:switchId,type:"button",role:"switch","aria-checked":checked,"aria-label":label||"Toggle switch",onClick:handleClick,onKeyDown:handleKeyDown,onFocus:handleFocus,onBlur:handleBlur,className:switchClasses,...rest,children:(0,jsx_runtime.jsx)("div",{className:trackClasses,children:(0,jsx_runtime.jsx)("div",{className:thumbClasses})})}),label&&(0,jsx_runtime.jsx)("span",{className:labelClasses,children:label})]})}));Switch.displayName="Switch";const components_Switch=Switch;Switch.__docgenInfo={description:"",methods:[],displayName:"Switch"};const Switch_stories={title:"Forms/Switch",component:components_Switch,parameters:{layout:"centered"},argTypes:{checked:{control:"boolean",description:"Whether the switch is checked (on) or not (off)"},state:{control:"select",options:["default","focus"],description:"Visual state of the switch"},label:{control:"text",description:"Label text displayed next to the switch"},onChange:{action:"changed",description:"Callback fired when the switch is toggled"},onFocus:{action:"focused",description:"Callback fired when the switch receives focus"},onBlur:{action:"blurred",description:"Callback fired when the switch loses focus"}}},Template=args=>(0,jsx_runtime.jsx)(components_Switch,{...args}),Default=Template.bind({});Default.args={checked:!1,label:"Switch label"};const Checked=Template.bind({});Checked.args={checked:!0,label:"Switch label"};const Focus=Template.bind({});Focus.args={checked:!1,state:"focus",label:"Switch label"};const FocusChecked=Template.bind({});FocusChecked.args={checked:!0,state:"focus",label:"Switch label"};const States=()=>(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Switch States"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(components_Switch,{checked:!1,label:"Switch label"}),(0,jsx_runtime.jsx)(components_Switch,{checked:!0,label:"Switch label"}),(0,jsx_runtime.jsx)(components_Switch,{checked:!1,state:"focus",label:"Switch label"}),(0,jsx_runtime.jsx)(components_Switch,{checked:!0,state:"focus",label:"Switch label"})]})]})}),Interactive=()=>{const[checked,setChecked]=react.useState(!1),[state,setState]=react.useState("default");return(0,jsx_runtime.jsxs)("div",{className:"space-y-6",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Interactive Switch"}),(0,jsx_runtime.jsx)(components_Switch,{checked,state,onChange:()=>setChecked(!checked),label:"Enable notifications"})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)("h4",{className:"text-md font-semibold",children:"Controls"}),(0,jsx_runtime.jsx)("div",{className:"space-y-2",children:(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm font-medium mb-1",children:"State:"}),(0,jsx_runtime.jsxs)("select",{value:state,onChange:e=>setState(e.target.value),className:"px-3 py-1 border border-gray-300 rounded",children:[(0,jsx_runtime.jsx)("option",{value:"default",children:"Default"}),(0,jsx_runtime.jsx)("option",{value:"focus",children:"Focus"})]})]})})]})]})},WithText=()=>(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Switch with Different Labels"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(components_Switch,{checked:!1,label:"Enable notifications"}),(0,jsx_runtime.jsx)(components_Switch,{checked:!0,label:"Auto-save documents"}),(0,jsx_runtime.jsx)(components_Switch,{checked:!1,label:"Dark mode"}),(0,jsx_runtime.jsx)(components_Switch,{checked:!0,label:"Email updates"})]})]})}),__namedExportsOrder=["Default","Checked","Focus","FocusChecked","States","Interactive","WithText"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Switch {...args} />",...Default.parameters?.docs?.source}}},Checked.parameters={...Checked.parameters,docs:{...Checked.parameters?.docs,source:{originalSource:"args => <Switch {...args} />",...Checked.parameters?.docs?.source}}},Focus.parameters={...Focus.parameters,docs:{...Focus.parameters?.docs,source:{originalSource:"args => <Switch {...args} />",...Focus.parameters?.docs?.source}}},FocusChecked.parameters={...FocusChecked.parameters,docs:{...FocusChecked.parameters?.docs,source:{originalSource:"args => <Switch {...args} />",...FocusChecked.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'() => <div className="space-y-4">\n    <div className="space-y-2">\n      <h3 className="text-lg font-semibold">Switch States</h3>\n      <div className="space-y-4">\n        <Switch checked={false} label="Switch label" />\n        <Switch checked={true} label="Switch label" />\n        <Switch checked={false} state="focus" label="Switch label" />\n        <Switch checked={true} state="focus" label="Switch label" />\n      </div>\n    </div>\n  </div>',...States.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:'() => {\n  const [checked, setChecked] = React.useState(false);\n  const [state, setState] = React.useState("default");\n  return <div className="space-y-6">\n      <div className="space-y-4">\n        <h3 className="text-lg font-semibold">Interactive Switch</h3>\n        <Switch checked={checked} state={state} onChange={() => setChecked(!checked)} label="Enable notifications" />\n      </div>\n      <div className="space-y-4">\n        <h4 className="text-md font-semibold">Controls</h4>\n        <div className="space-y-2">\n          <div>\n            <label className="block text-sm font-medium mb-1">State:</label>\n            <select value={state} onChange={e => setState(e.target.value)} className="px-3 py-1 border border-gray-300 rounded">\n              <option value="default">Default</option>\n              <option value="focus">Focus</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>;\n}',...Interactive.parameters?.docs?.source}}},WithText.parameters={...WithText.parameters,docs:{...WithText.parameters?.docs,source:{originalSource:'() => <div className="space-y-4">\n    <div className="space-y-2">\n      <h3 className="text-lg font-semibold">Switch with Different Labels</h3>\n      <div className="space-y-4">\n        <Switch checked={false} label="Enable notifications" />\n        <Switch checked={true} label="Auto-save documents" />\n        <Switch checked={false} label="Dark mode" />\n        <Switch checked={true} label="Email updates" />\n      </div>\n    </div>\n  </div>',...WithText.parameters?.docs?.source}}}}}]);