"use strict";(self.webpackChunkcommunity_rule=self.webpackChunkcommunity_rule||[]).push([[6131],{"./stories/Toggle.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Interactive:()=>Interactive,States:()=>States,WithIcon:()=>WithIcon,WithText:()=>WithText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Toggle_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const Toggle=(0,react.forwardRef)(({label,checked=!1,onChange,onFocus,onBlur,disabled=!1,state="default",showIcon=!1,showText=!1,icon="I",text="Toggle",className="",...props},ref)=>{const toggleId=(0,react.useId)(),labelId=(0,react.useId)(),stateStyles=(()=>{if(disabled)return{toggle:"bg-[var(--color-surface-default-tertiary)] text-[var(--color-content-default-tertiary)] cursor-not-allowed",label:"text-[var(--color-content-default-secondary)]"};if(checked)switch(state){case"hover":return{toggle:"bg-[var(--color-surface-default-secondary)] text-[var(--color-content-default-primary)]",label:"text-[var(--color-content-default-secondary)]"};case"focus":return{toggle:"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)] shadow-[0_0_5px_1px_#3281F8]",label:"text-[var(--color-content-default-secondary)]"};default:return{toggle:"bg-[var(--color-magenta-magenta100)] text-[var(--color-content-default-primary)] shadow-[0_0_0_1px_var(--color-border-default-brand-primary)]",label:"text-[var(--color-content-default-secondary)]"}}else switch(state){case"hover":return{toggle:"bg-[var(--color-surface-default-secondary)] text-[var(--color-content-default-primary)]",label:"text-[var(--color-content-default-secondary)]"};case"focus":return{toggle:"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)] shadow-[0_0_5px_1px_#3281F8]",label:"text-[var(--color-content-default-secondary)]"};default:return{toggle:"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)]",label:"text-[var(--color-content-default-secondary)]"}}})(),currentSize={toggle:"h-[var(--measures-sizing-032)] px-[16px] py-[8px] gap-[4px]",label:"text-[12px] leading-[16px]"},labelClasses=`${currentSize.label} font-inter font-medium`,toggleClasses=`\n      ${currentSize.toggle}\n      ${stateStyles.toggle}\n      rounded-full\n      font-inter\n      font-normal\n      text-[12px]\n      leading-[16px]\n      cursor-pointer\n      transition-all\n      duration-200\n      focus:outline-none\n      focus-visible:shadow-[0_0_5px_1px_#3281F8]\n      ${checked?"":"hover:!bg-[var(--color-surface-default-secondary)]"}\n      flex\n      items-center\n      justify-center\n      gap-[4px]\n      ${className}\n    `.trim().replace(/\s+/g," "),handleChange=(0,react.useCallback)(e=>{!disabled&&onChange&&onChange(e)},[disabled,onChange]),handleFocus=(0,react.useCallback)(e=>{!disabled&&onFocus&&onFocus(e)},[disabled,onFocus]),handleBlur=(0,react.useCallback)(e=>{!disabled&&onBlur&&onBlur(e)},[disabled,onBlur]),handleKeyDown=(0,react.useCallback)(e=>{disabled||"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),onChange&&onChange(e))},[disabled,onChange]);return(0,jsx_runtime.jsxs)("div",{className:"flex flex-col gap-[4px]",children:[label&&(0,jsx_runtime.jsx)("label",{id:labelId,htmlFor:toggleId,className:`${labelClasses} text-[var(--color-content-default-secondary)]`,children:label}),(0,jsx_runtime.jsx)("div",{className:disabled?"opacity-40":"",children:(0,jsx_runtime.jsxs)("button",{ref,id:toggleId,type:"button",role:"switch","aria-checked":checked,"aria-labelledby":label?labelId:void 0,disabled,onClick:handleChange,onKeyDown:handleKeyDown,onFocus:handleFocus,onBlur:handleBlur,className:toggleClasses,...props,children:[showIcon&&(0,jsx_runtime.jsx)("span",{className:"italic",children:icon}),showText&&(0,jsx_runtime.jsx)("span",{children:text})]})})]})});Toggle.displayName="Toggle";const components_Toggle=(0,react.memo)(Toggle);Toggle.__docgenInfo={description:"",methods:[],displayName:"Toggle",props:{checked:{defaultValue:{value:"false",computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},state:{defaultValue:{value:'"default"',computed:!1},required:!1},showIcon:{defaultValue:{value:"false",computed:!1},required:!1},showText:{defaultValue:{value:"false",computed:!1},required:!1},icon:{defaultValue:{value:'"I"',computed:!1},required:!1},text:{defaultValue:{value:'"Toggle"',computed:!1},required:!1},className:{defaultValue:{value:'""',computed:!1},required:!1}}};const Toggle_stories={title:"Forms/Toggle",component:components_Toggle,parameters:{layout:"centered"},argTypes:{state:{control:{type:"select"},options:["default","hover","focus"]},disabled:{control:{type:"boolean"}},checked:{control:{type:"boolean"}},showIcon:{control:{type:"boolean"}},showText:{control:{type:"boolean"}}}},Template=args=>(0,jsx_runtime.jsx)(components_Toggle,{...args}),States=()=>(0,jsx_runtime.jsx)("div",{className:"space-y-6",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Toggle States"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(components_Toggle,{label:"Default State",checked:!1}),(0,jsx_runtime.jsx)(components_Toggle,{label:"Hover State",checked:!1,state:"hover"}),(0,jsx_runtime.jsx)(components_Toggle,{label:"Selected State",checked:!0}),(0,jsx_runtime.jsx)(components_Toggle,{label:"Focus State",checked:!1,state:"focus"}),(0,jsx_runtime.jsx)(components_Toggle,{label:"Disabled State",checked:!1,disabled:!0})]})]})}),WithText=Template.bind({});WithText.args={label:"Text Toggle",checked:!1,showText:!0,text:"Toggle"};const WithIcon=Template.bind({});WithIcon.args={label:"Icon Toggle",checked:!1,showIcon:!0,icon:"I"};const Interactive=()=>{const[checked,setChecked]=react.useState(!1),[state,setState]=react.useState("default"),[disabled,setDisabled]=react.useState(!1);return(0,jsx_runtime.jsxs)("div",{className:"space-y-6",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Interactive Toggle"}),(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsx)(components_Toggle,{label:"Interactive Toggle",checked,onChange:()=>setChecked(!checked),state,disabled})})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)("h4",{className:"text-md font-semibold",children:"Controls"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",id:"checked",checked,onChange:e=>setChecked(e.target.checked)}),(0,jsx_runtime.jsx)("label",{htmlFor:"checked",className:"text-sm",children:"Checked"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm font-medium mb-1",children:"State:"}),(0,jsx_runtime.jsxs)("select",{value:state,onChange:e=>setState(e.target.value),className:"px-3 py-1 border border-gray-300 rounded",children:[(0,jsx_runtime.jsx)("option",{value:"default",children:"Default"}),(0,jsx_runtime.jsx)("option",{value:"focus",children:"Focus"})]})]}),(0,jsx_runtime.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",id:"disabled",checked:disabled,onChange:e=>setDisabled(e.target.checked)}),(0,jsx_runtime.jsx)("label",{htmlFor:"disabled",className:"text-sm",children:"Disabled"})]})]})]})]})},__namedExportsOrder=["States","WithText","WithIcon","Interactive"];States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'() => <div className="space-y-6">\n    <div className="space-y-4">\n      <h3 className="text-lg font-semibold">Toggle States</h3>\n      <div className="space-y-4">\n        <Toggle label="Default State" checked={false} />\n        <Toggle label="Hover State" checked={false} state="hover" />\n        <Toggle label="Selected State" checked={true} />\n        <Toggle label="Focus State" checked={false} state="focus" />\n        <Toggle label="Disabled State" checked={false} disabled />\n      </div>\n    </div>\n  </div>',...States.parameters?.docs?.source}}},WithText.parameters={...WithText.parameters,docs:{...WithText.parameters?.docs,source:{originalSource:"args => <Toggle {...args} />",...WithText.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:"args => <Toggle {...args} />",...WithIcon.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:'() => {\n  const [checked, setChecked] = React.useState(false);\n  const [state, setState] = React.useState("default");\n  const [disabled, setDisabled] = React.useState(false);\n  return <div className="space-y-6">\n      <div className="space-y-4">\n        <h3 className="text-lg font-semibold">Interactive Toggle</h3>\n        <div className="space-y-4">\n          <Toggle label="Interactive Toggle" checked={checked} onChange={() => setChecked(!checked)} state={state} disabled={disabled} />\n        </div>\n      </div>\n      <div className="space-y-4">\n        <h4 className="text-md font-semibold">Controls</h4>\n        <div className="space-y-2">\n          <div className="flex items-center space-x-2">\n            <input type="checkbox" id="checked" checked={checked} onChange={e => setChecked(e.target.checked)} />\n            <label htmlFor="checked" className="text-sm">\n              Checked\n            </label>\n          </div>\n          <div>\n            <label className="block text-sm font-medium mb-1">State:</label>\n            <select value={state} onChange={e => setState(e.target.value)} className="px-3 py-1 border border-gray-300 rounded">\n              <option value="default">Default</option>\n              <option value="focus">Focus</option>\n            </select>\n          </div>\n          <div className="flex items-center space-x-2">\n            <input type="checkbox" id="disabled" checked={disabled} onChange={e => setDisabled(e.target.checked)} />\n            <label htmlFor="disabled" className="text-sm">\n              Disabled\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>;\n}',...Interactive.parameters?.docs?.source}}}}}]);