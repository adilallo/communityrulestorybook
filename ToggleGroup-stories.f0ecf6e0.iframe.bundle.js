"use strict";(self.webpackChunkcommunity_rule=self.webpackChunkcommunity_rule||[]).push([[6036],{"./stories/ToggleGroup.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Interactive:()=>Interactive,Middle:()=>Middle,Positions:()=>Positions,Right:()=>Right,States:()=>States,WithIcons:()=>WithIcons,WithText:()=>WithText,WithoutText:()=>WithoutText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ToggleGroup_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const ToggleGroup=(0,react.memo)((0,react.forwardRef)((props,ref)=>{const{children,className="",position="left",state="default",showText=!0,ariaLabel,onChange,onFocus,onBlur,...rest}=props,groupId=(0,react.useId)(),getPositionStyles=(0,react.useCallback)(pos=>{switch(pos){case"left":return"rounded-l-[var(--measures-radius-medium)] rounded-r-none";case"middle":return"rounded-none";case"right":return"rounded-r-[var(--measures-radius-medium)] rounded-l-none";default:return"rounded-[var(--measures-radius-medium)]"}},[]),getStateStyles=(0,react.useCallback)(state=>{switch(state){case"hover":return"bg-[var(--color-magenta-magenta100)] text-[var(--color-content-default-primary)]";case"focus":return"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)] shadow-[0_0_5px_1px_#3281F8]";case"selected":return"bg-[var(--color-magenta-magenta100)] text-[var(--color-content-default-primary)] shadow-[inset_0_0_0_1px_var(--color-border-default-secondary)]";default:return"bg-[var(--color-surface-default-primary)] text-[var(--color-content-default-primary)]"}},[]),positionStyles=getPositionStyles(position),stateStyles=getStateStyles(state),handleClick=(0,react.useCallback)(e=>{onChange&&onChange(e)},[onChange]),handleFocus=(0,react.useCallback)(e=>{onFocus&&onFocus(e)},[onFocus]),handleBlur=(0,react.useCallback)(e=>{onBlur&&onBlur(e)},[onBlur]),handleKeyDown=(0,react.useCallback)(e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),onChange&&onChange(e))},[onChange]),toggleClasses=`\n      ${positionStyles}\n      ${stateStyles}\n      py-[var(--measures-spacing-008)]\n      px-[var(--measures-spacing-008)]\n      gap-[var(--measures-spacing-008)]\n      font-inter\n      font-medium\n      text-[12px]\n      leading-[12px]\n      cursor-pointer\n      transition-all\n      duration-200\n      focus:outline-none\n      focus-visible:shadow-[0_0_5px_1px_#3281F8]\n      hover:bg-[var(--color-magenta-magenta100)]\n      flex\n      items-center\n      justify-center\n      ${className}\n    `.trim().replace(/\s+/g," ");return(0,jsx_runtime.jsx)("button",{ref,id:groupId,type:"button",role:"button","aria-label":ariaLabel||(showText?void 0:"Toggle option"),onClick:handleClick,onKeyDown:handleKeyDown,onFocus:handleFocus,onBlur:handleBlur,className:toggleClasses,...rest,children:showText?children:children||"☰"})}));ToggleGroup.displayName="ToggleGroup";const components_ToggleGroup=ToggleGroup;ToggleGroup.__docgenInfo={description:"",methods:[],displayName:"ToggleGroup"};const ToggleGroup_stories={title:"Forms/ToggleGroup",component:components_ToggleGroup,parameters:{layout:"centered"},argTypes:{position:{control:{type:"select"},options:["left","middle","right"]},state:{control:{type:"select"},options:["default","hover","focus","selected"]},showText:{control:{type:"boolean"}}}},Template=args=>(0,jsx_runtime.jsx)(components_ToggleGroup,{...args,children:"Toggle Item"}),Default=Template.bind({});Default.args={position:"left",state:"default",showText:!0};const Middle=Template.bind({});Middle.args={position:"middle",state:"default",showText:!0};const Right=Template.bind({});Right.args={position:"right",state:"default",showText:!0};const States=()=>(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Toggle Group States"}),(0,jsx_runtime.jsxs)("div",{className:"flex space-x-4",children:[(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"left",state:"default",children:"Default"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"middle",state:"hover",children:"Hover"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"middle",state:"focus",children:"Focus"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"right",state:"selected",children:"Selected"})]})]})}),Positions=()=>(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Toggle Group Positions"}),(0,jsx_runtime.jsxs)("div",{className:"flex",children:[(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"left",state:"default",children:"Left"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"middle",state:"default",children:"Middle"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"middle",state:"default",children:"Middle"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"right",state:"default",children:"Right"})]})]})}),WithText=Template.bind({});WithText.args={position:"left",state:"default",showText:!0,children:"Active Deals"};const WithoutText=Template.bind({});WithoutText.args={position:"left",state:"default",showText:!1,children:"☰"};const WithIcons=()=>(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Toggle Group with Icons"}),(0,jsx_runtime.jsxs)("div",{className:"flex",children:[(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"left",state:"default",showText:!1,ariaLabel:"Menu",children:"☰"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"middle",state:"selected",showText:!1,ariaLabel:"Menu",children:"☰"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"right",state:"default",showText:!1,ariaLabel:"Menu",children:"☰"})]})]})}),Interactive=()=>{const[selectedPosition,setSelectedPosition]=react.useState("left"),[state,setState]=react.useState("default"),[showText,setShowText]=react.useState(!0);return(0,jsx_runtime.jsxs)("div",{className:"space-y-6",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold",children:"Interactive Toggle Group"}),(0,jsx_runtime.jsxs)("div",{className:"flex",children:[(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"left",state:"left"===selectedPosition?"selected":state,showText,onChange:()=>setSelectedPosition("left"),ariaLabel:showText?void 0:"Active Deals",children:showText?"Active Deals":"☰"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"middle",state:"middle"===selectedPosition?"selected":state,showText,onChange:()=>setSelectedPosition("middle"),ariaLabel:showText?void 0:"Inactive Deals",children:showText?"Inactive Deals":"☰"}),(0,jsx_runtime.jsx)(components_ToggleGroup,{position:"right",state:"right"===selectedPosition?"selected":state,showText,onChange:()=>setSelectedPosition("right"),ariaLabel:showText?void 0:"Pending Deals",children:showText?"Pending Deals":"☰"})]})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)("h4",{className:"text-md font-semibold",children:"Controls"}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm font-medium mb-1",children:"State:"}),(0,jsx_runtime.jsxs)("select",{value:state,onChange:e=>setState(e.target.value),className:"px-3 py-1 border border-gray-300 rounded",children:[(0,jsx_runtime.jsx)("option",{value:"default",children:"Default"}),(0,jsx_runtime.jsx)("option",{value:"focus",children:"Focus"})]})]}),(0,jsx_runtime.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",id:"showText",checked:showText,onChange:e=>setShowText(e.target.checked)}),(0,jsx_runtime.jsx)("label",{htmlFor:"showText",className:"text-sm",children:"Show Text"})]})]})]})]})},__namedExportsOrder=["Default","Middle","Right","States","Positions","WithText","WithoutText","WithIcons","Interactive"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <ToggleGroup {...args}>Toggle Item</ToggleGroup>",...Default.parameters?.docs?.source}}},Middle.parameters={...Middle.parameters,docs:{...Middle.parameters?.docs,source:{originalSource:"args => <ToggleGroup {...args}>Toggle Item</ToggleGroup>",...Middle.parameters?.docs?.source}}},Right.parameters={...Right.parameters,docs:{...Right.parameters?.docs,source:{originalSource:"args => <ToggleGroup {...args}>Toggle Item</ToggleGroup>",...Right.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'() => <div className="space-y-4">\n    <div className="space-y-2">\n      <h3 className="text-lg font-semibold">Toggle Group States</h3>\n      <div className="flex space-x-4">\n        <ToggleGroup position="left" state="default">\n          Default\n        </ToggleGroup>\n        <ToggleGroup position="middle" state="hover">\n          Hover\n        </ToggleGroup>\n        <ToggleGroup position="middle" state="focus">\n          Focus\n        </ToggleGroup>\n        <ToggleGroup position="right" state="selected">\n          Selected\n        </ToggleGroup>\n      </div>\n    </div>\n  </div>',...States.parameters?.docs?.source}}},Positions.parameters={...Positions.parameters,docs:{...Positions.parameters?.docs,source:{originalSource:'() => <div className="space-y-4">\n    <div className="space-y-2">\n      <h3 className="text-lg font-semibold">Toggle Group Positions</h3>\n      <div className="flex">\n        <ToggleGroup position="left" state="default">\n          Left\n        </ToggleGroup>\n        <ToggleGroup position="middle" state="default">\n          Middle\n        </ToggleGroup>\n        <ToggleGroup position="middle" state="default">\n          Middle\n        </ToggleGroup>\n        <ToggleGroup position="right" state="default">\n          Right\n        </ToggleGroup>\n      </div>\n    </div>\n  </div>',...Positions.parameters?.docs?.source}}},WithText.parameters={...WithText.parameters,docs:{...WithText.parameters?.docs,source:{originalSource:"args => <ToggleGroup {...args}>Toggle Item</ToggleGroup>",...WithText.parameters?.docs?.source}}},WithoutText.parameters={...WithoutText.parameters,docs:{...WithoutText.parameters?.docs,source:{originalSource:"args => <ToggleGroup {...args}>Toggle Item</ToggleGroup>",...WithoutText.parameters?.docs?.source}}},WithIcons.parameters={...WithIcons.parameters,docs:{...WithIcons.parameters?.docs,source:{originalSource:'() => <div className="space-y-4">\n    <div className="space-y-2">\n      <h3 className="text-lg font-semibold">Toggle Group with Icons</h3>\n      <div className="flex">\n        <ToggleGroup position="left" state="default" showText={false} ariaLabel="Menu">\n          ☰\n        </ToggleGroup>\n        <ToggleGroup position="middle" state="selected" showText={false} ariaLabel="Menu">\n          ☰\n        </ToggleGroup>\n        <ToggleGroup position="right" state="default" showText={false} ariaLabel="Menu">\n          ☰\n        </ToggleGroup>\n      </div>\n    </div>\n  </div>',...WithIcons.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:'() => {\n  const [selectedPosition, setSelectedPosition] = React.useState("left");\n  const [state, setState] = React.useState("default");\n  const [showText, setShowText] = React.useState(true);\n  return <div className="space-y-6">\n      <div className="space-y-4">\n        <h3 className="text-lg font-semibold">Interactive Toggle Group</h3>\n        <div className="flex">\n          <ToggleGroup position="left" state={selectedPosition === "left" ? "selected" : state} showText={showText} onChange={() => setSelectedPosition("left")} ariaLabel={!showText ? "Active Deals" : undefined}>\n            {showText ? "Active Deals" : "☰"}\n          </ToggleGroup>\n          <ToggleGroup position="middle" state={selectedPosition === "middle" ? "selected" : state} showText={showText} onChange={() => setSelectedPosition("middle")} ariaLabel={!showText ? "Inactive Deals" : undefined}>\n            {showText ? "Inactive Deals" : "☰"}\n          </ToggleGroup>\n          <ToggleGroup position="right" state={selectedPosition === "right" ? "selected" : state} showText={showText} onChange={() => setSelectedPosition("right")} ariaLabel={!showText ? "Pending Deals" : undefined}>\n            {showText ? "Pending Deals" : "☰"}\n          </ToggleGroup>\n        </div>\n      </div>\n      <div className="space-y-4">\n        <h4 className="text-md font-semibold">Controls</h4>\n        <div className="space-y-2">\n          <div>\n            <label className="block text-sm font-medium mb-1">State:</label>\n            <select value={state} onChange={e => setState(e.target.value)} className="px-3 py-1 border border-gray-300 rounded">\n              <option value="default">Default</option>\n              <option value="focus">Focus</option>\n            </select>\n          </div>\n          <div className="flex items-center space-x-2">\n            <input type="checkbox" id="showText" checked={showText} onChange={e => setShowText(e.target.checked)} />\n            <label htmlFor="showText" className="text-sm">\n              Show Text\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>;\n}',...Interactive.parameters?.docs?.source}}}}}]);